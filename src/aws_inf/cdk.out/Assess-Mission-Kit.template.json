{
  "Resources": {
    "VPCB9E5F0B4": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Assess-Mission-Kit/VPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Assess-Mission-Kit/VPC/Resource"
      }
    },
    "VPCpublicSubnet1Subnet325F50B2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/17",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "Assess-Mission-Kit/VPC/publicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Assess-Mission-Kit/VPC/publicSubnet1/Subnet"
      }
    },
    "VPCpublicSubnet1RouteTableF591E248": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Assess-Mission-Kit/VPC/publicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Assess-Mission-Kit/VPC/publicSubnet1/RouteTable"
      }
    },
    "VPCpublicSubnet1RouteTableAssociationBFFA43B7": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCpublicSubnet1RouteTableF591E248"
        },
        "SubnetId": {
          "Ref": "VPCpublicSubnet1Subnet325F50B2"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Assess-Mission-Kit/VPC/publicSubnet1/RouteTableAssociation"
      }
    },
    "VPCpublicSubnet1DefaultRoute19059ECD": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCpublicSubnet1RouteTableF591E248"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "DependsOn": [
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "Assess-Mission-Kit/VPC/publicSubnet1/DefaultRoute"
      }
    },
    "VPCpublicSubnet2Subnet2B2DFF71": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/17",
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "Assess-Mission-Kit/VPC/publicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Assess-Mission-Kit/VPC/publicSubnet2/Subnet"
      }
    },
    "VPCpublicSubnet2RouteTable55DAB1BB": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Assess-Mission-Kit/VPC/publicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Assess-Mission-Kit/VPC/publicSubnet2/RouteTable"
      }
    },
    "VPCpublicSubnet2RouteTableAssociation0849466B": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCpublicSubnet2RouteTable55DAB1BB"
        },
        "SubnetId": {
          "Ref": "VPCpublicSubnet2Subnet2B2DFF71"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Assess-Mission-Kit/VPC/publicSubnet2/RouteTableAssociation"
      }
    },
    "VPCpublicSubnet2DefaultRoute9ED4D6BC": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "VPCpublicSubnet2RouteTable55DAB1BB"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "DependsOn": [
        "VPCVPCGW99B986DC"
      ],
      "Metadata": {
        "aws:cdk:path": "Assess-Mission-Kit/VPC/publicSubnet2/DefaultRoute"
      }
    },
    "VPCIGWB7E252D3": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Assess-Mission-Kit/VPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Assess-Mission-Kit/VPC/IGW"
      }
    },
    "VPCVPCGW99B986DC": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        },
        "InternetGatewayId": {
          "Ref": "VPCIGWB7E252D3"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Assess-Mission-Kit/VPC/VPCGW"
      }
    },
    "InstanceSSMCBFA3CF0": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "ec2.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonSSMManagedInstanceCore"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Assess-Mission-Kit/InstanceSSM/Resource"
      }
    },
    "gophishsg9F489CAE": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "security group for GoPhish server",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "allow HTTP traffic from anywhere",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          },
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "allow HTTPS traffic from anywhere",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443
          },
          {
            "CidrIp": "10.0.8.102/32",
            "Description": "allow ALL Inbound traffic from Peer (Domain-2-Redirector)",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Assess-Mission-Kit/go-phish-sg/Resource"
      }
    },
    "redirectsgD10E88A8": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "security group for a redirect server",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "SecurityGroupIngress": [
          {
            "CidrIp": "10.0.8.101/32",
            "Description": "allow ALL Inbound traffic from Peer (Domain-1-Go-Phish)",
            "IpProtocol": "-1"
          },
          {
            "CidrIp": "64.129.1.8/32",
            "Description": "allow VPN traffic from your IP ",
            "FromPort": 11443,
            "IpProtocol": "udp",
            "ToPort": 11443
          },
          {
            "CidrIp": "10.56.3.4/32",
            "Description": "allow ALL Inbound traffic from Customer Subnet",
            "IpProtocol": "-1"
          },
          {
            "CidrIp": "10.56.43.2/32",
            "Description": "allow ALL Inbound traffic from Customer Subnet",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "VPCB9E5F0B4"
        }
      },
      "Metadata": {
        "aws:cdk:path": "Assess-Mission-Kit/redirect-sg/Resource"
      }
    },
    "Domain1GoPhishInstanceProfile81403EBD": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "InstanceSSMCBFA3CF0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Assess-Mission-Kit/Domain-1-Go-Phish/InstanceProfile"
      }
    },
    "Domain1GoPhish75425A92": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "IamInstanceProfile": {
          "Ref": "Domain1GoPhishInstanceProfile81403EBD"
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsservicecanonicalubuntuserverfocalstablecurrentamd64hvmebsgp2amiidC96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t3.micro",
        "PrivateIpAddress": "10.0.8.101",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "gophishsg9F489CAE",
              "GroupId"
            ]
          }
        ],
        "SubnetId": {
          "Ref": "VPCpublicSubnet1Subnet325F50B2"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Assess-Mission-Kit/Domain-1-Go-Phish"
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash\nset -e -x\nmkdir -p /tmp/d1\nmkdir -p /opt/gophish\napt update -y\napt install -y unzip socat awscli\ncurl ifconfig.me/ip > /tmp/d1/curl\nnewip=$(curl http://ifconfig.me/ip)\nwget https://github.com/gophish/gophish/releases/download/v0.11.0/gophish-v0.11.0-linux-64bit.zip -O /tmp/d1/gophish.zip\nunzip /tmp/d1/gophish.zip -d /opt/gophish\ncd /opt/gophish\nchmod +x gophish\nsed -i -e '/listen_url/s/127.0.0.1:3333/10.0.8.101:3333/' config.json\n/opt/gophish/gophish > /opt/gophish/gophish.log 2>&1 &\nsleep 20s\ncurl -s -k -w \"%{http_code}\\n\" https://10.0.8.101:3333/login -o /dev/null 1> /tmp/d1/curl2\nif [[ $(< /tmp/d1/curl2) == 200 ]]; then\n\techo \"complete\" > /tmp/d1/complete\nelif [[ $(< /tmp/d1/curl2) != 200 ]]; then\n\techo \"not complete\" > /tmp/d1/not_complete\nfi\nsleep 30s\ncat /opt/gophish/gophish.log\n\n\n"
        }
      },
      "DependsOn": [
        "InstanceSSMCBFA3CF0"
      ],
      "Metadata": {
        "aws:cdk:path": "Assess-Mission-Kit/Domain-1-Go-Phish/Resource"
      }
    },
    "Domain2RedirectorInstanceProfileB0FBD222": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "InstanceSSMCBFA3CF0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "Assess-Mission-Kit/Domain-2-Redirector/InstanceProfile"
      }
    },
    "Domain2Redirector3707B6DF": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "IamInstanceProfile": {
          "Ref": "Domain2RedirectorInstanceProfileB0FBD222"
        },
        "ImageId": {
          "Ref": "SsmParameterValueawsservicecanonicalubuntuserverfocalstablecurrentamd64hvmebsgp2amiidC96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t3.micro",
        "PrivateIpAddress": "10.0.8.102",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "redirectsgD10E88A8",
              "GroupId"
            ]
          }
        ],
        "SubnetId": {
          "Ref": "VPCpublicSubnet1Subnet325F50B2"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Assess-Mission-Kit/Domain-2-Redirector"
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash\nset -e -x\nmkdir -p /tmp/mytest\napt update -y\napt install -y unzip socat expect awscli\ncurl ifconfig.me/ip > /tmp/mytest/curl\nwget https://git.io/vpn -O /tmp/mytest/openvpn-install.sh\naws s3 cp s3://nebulousscripts/script.exp /tmp/mytest/script.exp\nnewip=$(curl http://ifconfig.me/ip)\nsed -i -r '/hostname/s/(\\b[0-9]{1,3}\\.){3}[0-9]{1,3}\\b'/\"$newip\"/ /tmp/mytest/script.exp\nchmod +x /tmp/mytest/openvpn-install.sh\nchmod +x /tmp/mytest/script.exp\n/tmp/mytest/script.exp\necho \"complete, ssh key is in /root/ubuntu_arm.ovpn\" > /tmp/mytest/complete\nsleep 5s\ncat /root/ubuntu_arm.ovpn"
        }
      },
      "DependsOn": [
        "InstanceSSMCBFA3CF0"
      ],
      "Metadata": {
        "aws:cdk:path": "Assess-Mission-Kit/Domain-2-Redirector/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VPwW7CMAz9Fu4hrHDZbkM9IG5RO3FPjREebYISR6iK8u9LaFm3k5/fe362K1ntKvm2+tQPv4bzbRPBOpSxZQ030aC3wQGK+mKUdnpARidqazy7AFzov5YsnInJmiRKXETYyni6Q9FOqhYqdD1BGzqDz9kFNTYwfumux4VfuL33FkiX5F9zAUeTz8nOg2Z86HFeM3d7zi9cBzQsWoTgiMeDs+H+XPCPOOZ3tIE5csJJkB5kbOx00au+ZOXshXpMKQk18tWazU6+y4/Vtydau2CYBpTNVH8AsWxfNmMBAAA="
      },
      "Metadata": {
        "aws:cdk:path": "Assess-Mission-Kit/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Parameters": {
    "SsmParameterValueawsservicecanonicalubuntuserverfocalstablecurrentamd64hvmebsgp2amiidC96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
      "Default": "/aws/service/canonical/ubuntu/server/focal/stable/current/amd64/hvm/ebs-gp2/ami-id"
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  }
}